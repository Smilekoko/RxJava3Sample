printNormal("====[fromIterable]====");
List<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4));
Observable<Integer> iterableObservable = Observable.fromIterable(list);
doSubscribe(iterableObservable);

printNormal("====[fromArray]====");
Observable<String> arrayObservable = Observable.fromArray("aaa", "bbb", "ccc");
doSubscribe(arrayObservable);

printNormal("====[fromAction]====");
Action action = () -> printNormal("this is a action!");
Completable actionCompletable = Completable.fromAction(action);
doCompletableSubscribe(actionCompletable);

printNormal("====[fromCallable]====");
Callable<String> callable = () -> "this is a callable!";
Observable<String> callableObservable = Observable.fromCallable(callable);
doSubscribe(callableObservable);

printNormal("====[fromFuture]====");
Future<String> future = ExecutorUtils.getSingleExecutor().schedule(() -> "Future delay one second!", 1, TimeUnit.SECONDS);
Observable<String> futureObservable = Observable.fromFuture(future)
        // 不设置的话会阻塞主线程
        .subscribeOn(Schedulers.io())
        .observeOn(AndroidSchedulers.mainThread());
doSubscribe(futureObservable);